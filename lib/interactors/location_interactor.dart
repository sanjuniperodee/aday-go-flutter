import 'dart:async';
import 'dart:io';

import 'package:elementary_helper/elementary_helper.dart';
import 'package:latlong2/latlong.dart';
import 'package:location/location.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:injectable/injectable.dart';
import 'package:geolocator/geolocator.dart' as geoLocator;

abstract class ILocationInteractor {
  StateNotifier<geoLocator.LocationPermission> get locationStatus;

  StateNotifier<bool> get locationServiceEnabled;

  StateNotifier<LatLng> get userLocation;

  Future<void> requestLocation();
  
  Future<geoLocator.Position?> getCurrentLocation();
}

@singleton
class LocationInteractor extends ILocationInteractor {
  final SharedPreferences sharedPreferences;

  LocationInteractor(
    this.sharedPreferences,
  );

  late StreamSubscription<LocationData> onUserLocationChanged;

  @override
  final StateNotifier<geoLocator.LocationPermission> locationStatus =
      StateNotifier();

  @override
  StateNotifier<bool> locationServiceEnabled = StateNotifier(
    initValue: false,
  );

  @override
  late final StateNotifier<LatLng> userLocation = StateNotifier(
      initValue: LatLng(
    sharedPreferences.getDouble('latitude') ?? 0,
    sharedPreferences.getDouble('longitude') ?? 0,
  ));

  @override
  Future<geoLocator.LocationPermission?> requestLocation() async {
    try {
      print('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π...');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∫–ª—é—á–µ–Ω –ª–∏ —Å–µ—Ä–≤–∏—Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
      bool serviceEnabled = await geoLocator.Geolocator.isLocationServiceEnabled();
      if (!serviceEnabled) {
        print('‚ùå –°–µ—Ä–≤–∏—Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω');
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        return null;
      }
      print('‚úÖ –°–µ—Ä–≤–∏—Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –≤–∫–ª—é—á–µ–Ω');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
      geoLocator.LocationPermission permission = await geoLocator.Geolocator.checkPermission();
      print('üìç –¢–µ–∫—É—â–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: $permission');

      // –ï—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏—Ö
      if (permission == geoLocator.LocationPermission.denied) {
        print('üîÑ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è...');
        permission = await geoLocator.Geolocator.requestPermission();
        print('üìù –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: $permission');
        
        if (permission == geoLocator.LocationPermission.denied) {
          print('‚ùå –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
          return null;
        }
      }

      // –ï—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞–≤—Å–µ–≥–¥–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã
      if (permission == geoLocator.LocationPermission.deniedForever) {
        print('‚ùå –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞–≤—Å–µ–≥–¥–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã');
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        return null;
      }

      print('‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã: $permission');
      locationStatus.accept(permission);
      
      return permission;
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π: $e');
      return null;
    }
  }

  @override
  Future<geoLocator.Position?> getCurrentLocation() async {
    try {
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–≤–µ—Å—Ç–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ (–±—ã—Å—Ç—Ä–æ)
      final lastKnown = await geoLocator.Geolocator.getLastKnownPosition();
      if (lastKnown != null) {
        print('üìç –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–≤–µ—Å—Ç–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: ${lastKnown.latitude}, ${lastKnown.longitude}');
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ SharedPreferences
        await sharedPreferences.setDouble('latitude', lastKnown.latitude);
        await sharedPreferences.setDouble('longitude', lastKnown.longitude);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        userLocation.accept(LatLng(lastKnown.latitude, lastKnown.longitude));
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤ —Ñ–æ–Ω–µ
        _getFreshLocation();
        
        return lastKnown;
      }
      
      // –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è, –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ
      return await _getFreshLocation();
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è: $e');
      return null;
    }
  }
  
  Future<geoLocator.Position?> _getFreshLocation() async {
    try {
      final position = await geoLocator.Geolocator.getCurrentPosition(
        locationSettings: geoLocator.LocationSettings(
          accuracy: geoLocator.LocationAccuracy.high,
          timeLimit: Duration(seconds: 5), // –£–º–µ–Ω—å—à–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–æ 5 —Å–µ–∫—É–Ω–¥
        ),
      );
      
      print('üìç –ü–æ–ª—É—á–µ–Ω—ã –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ${position.latitude}, ${position.longitude}');
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ SharedPreferences
      await sharedPreferences.setDouble('latitude', position.latitude);
      await sharedPreferences.setDouble('longitude', position.longitude);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      userLocation.accept(LatLng(position.latitude, position.longitude));
      
      return position;
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç: $e');
      return null;
    }
  }
}

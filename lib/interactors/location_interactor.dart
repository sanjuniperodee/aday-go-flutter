import 'dart:async';
import 'dart:io';

import 'package:elementary_helper/elementary_helper.dart';
import 'package:latlong2/latlong.dart';
import 'package:location/location.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:injectable/injectable.dart';
import 'package:geolocator/geolocator.dart' as geoLocator;

abstract class ILocationInteractor {
  StateNotifier<geoLocator.LocationPermission> get locationStatus;

  StateNotifier<bool> get locationServiceEnabled;

  StateNotifier<LatLng> get userLocation;

  Future<void> requestLocation();
  
  Future<geoLocator.Position?> getCurrentLocation();
}

@singleton
class LocationInteractor extends ILocationInteractor {
  final SharedPreferences sharedPreferences;

  LocationInteractor(
    this.sharedPreferences,
  );

  late StreamSubscription<LocationData> onUserLocationChanged;

  @override
  final StateNotifier<geoLocator.LocationPermission> locationStatus =
      StateNotifier();

  @override
  StateNotifier<bool> locationServiceEnabled = StateNotifier(
    initValue: false,
  );

  @override
  late final StateNotifier<LatLng> userLocation = StateNotifier(
      initValue: LatLng(
    sharedPreferences.getDouble('latitude') ?? 0,
    sharedPreferences.getDouble('longitude') ?? 0,
  ));

  @override
  Future<geoLocator.LocationPermission?> requestLocation() async {
    try {
      print('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π...');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∫–ª—é—á–µ–Ω –ª–∏ —Å–µ—Ä–≤–∏—Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
      bool serviceEnabled = await geoLocator.Geolocator.isLocationServiceEnabled();
      if (!serviceEnabled) {
        print('‚ùå –°–µ—Ä–≤–∏—Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω');
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        return null;
      }
      print('‚úÖ –°–µ—Ä–≤–∏—Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –≤–∫–ª—é—á–µ–Ω');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
      geoLocator.LocationPermission permission = await geoLocator.Geolocator.checkPermission();
      print('üìç –¢–µ–∫—É—â–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: $permission');

      // –ï—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏—Ö
      if (permission == geoLocator.LocationPermission.denied) {
        print('üîÑ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è...');
        permission = await geoLocator.Geolocator.requestPermission();
        print('üìù –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: $permission');
        
        if (permission == geoLocator.LocationPermission.denied) {
          print('‚ùå –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
          return null;
        }
      }

      // –ï—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞–≤—Å–µ–≥–¥–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã
      if (permission == geoLocator.LocationPermission.deniedForever) {
        print('‚ùå –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞–≤—Å–µ–≥–¥–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã');
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        return null;
      }

      print('‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã: $permission');
      locationStatus.accept(permission);
      
      return permission;
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π: $e');
      return null;
    }
  }

  @override
  Future<geoLocator.Position?> getCurrentLocation() async {
    try {
      print('üéØ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è...');
      
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
      geoLocator.LocationPermission permission = await geoLocator.Geolocator.checkPermission();
      
      if (permission == geoLocator.LocationPermission.denied) {
        print('üîÑ –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º...');
        permission = await geoLocator.Geolocator.requestPermission();
        if (permission == geoLocator.LocationPermission.denied) {
          print('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è');
          return null;
        }
      }
      
      if (permission == geoLocator.LocationPermission.deniedForever) {
        print('‚ùå –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞–≤—Å–µ–≥–¥–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã');
        return null;
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–µ—Ä–≤–∏—Å –≤–∫–ª—é—á–µ–Ω
      bool serviceEnabled = await geoLocator.Geolocator.isLocationServiceEnabled();
      if (!serviceEnabled) {
        print('‚ùå –°–µ—Ä–≤–∏—Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω');
        return null;
      }
      
      print('‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏ —Å–µ—Ä–≤–∏—Å—ã –≤ –ø–æ—Ä—è–¥–∫–µ, –ø–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é...');
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é
      if (Platform.isAndroid) {
        final position = await geoLocator.Geolocator.getCurrentPosition(
          locationSettings: geoLocator.LocationSettings(
            accuracy: geoLocator.LocationAccuracy.high,
            timeLimit: Duration(seconds: 15), // –¢–∞–π–º–∞—É—Ç 15 —Å–µ–∫—É–Ω–¥
          ),
        );
        
        print('üìç –ü–æ–∑–∏—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞: ${position.latitude}, ${position.longitude}');
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ SharedPreferences
        await sharedPreferences.setDouble('latitude', position.latitude);
        await sharedPreferences.setDouble('longitude', position.longitude);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        userLocation.accept(LatLng(position.latitude, position.longitude));
        
        return position;
      } else {
        // –î–ª—è iOS –ø—Ä–æ–±—É–µ–º —Å–Ω–∞—á–∞–ª–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –∏–∑–≤–µ—Å—Ç–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
        var position = await geoLocator.Geolocator.getLastKnownPosition();
        
        if (position == null) {
          // –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–æ–∑–∏—Ü–∏–∏, –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é
          position = await geoLocator.Geolocator.getCurrentPosition(
            locationSettings: geoLocator.LocationSettings(
              accuracy: geoLocator.LocationAccuracy.high,
              timeLimit: Duration(seconds: 15),
            ),
          );
        }
        
        if (position != null) {
          print('üìç –ü–æ–∑–∏—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞: ${position.latitude}, ${position.longitude}');
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ SharedPreferences
          await sharedPreferences.setDouble('latitude', position.latitude);
          await sharedPreferences.setDouble('longitude', position.longitude);
          
          // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
          userLocation.accept(LatLng(position.latitude, position.longitude));
        }
        
        return position;
      }
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è: $e');
      
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –∏–∑–≤–µ—Å—Ç–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
      try {
        final lastPosition = await geoLocator.Geolocator.getLastKnownPosition();
        if (lastPosition != null) {
          print('üìç –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∏–∑–≤–µ—Å—Ç–Ω—É—é –ø–æ–∑–∏—Ü–∏—é: ${lastPosition.latitude}, ${lastPosition.longitude}');
          userLocation.accept(LatLng(lastPosition.latitude, lastPosition.longitude));
          return lastPosition;
        }
      } catch (e2) {
        print('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –ø–æ–∑–∏—Ü–∏—é: $e2');
      }
      
      return null;
    }
  }
}
